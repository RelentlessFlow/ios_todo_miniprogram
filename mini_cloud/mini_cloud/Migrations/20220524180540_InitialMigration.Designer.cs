// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mini_cloud.Databases.Data;

#nullable disable

namespace mini_cloud.Migrations
{
    [DbContext(typeof(RoutineDbContext))]
    [Migration("20220524180540_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("mini_cloud.Databases.Entities.Todo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Complete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Flag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ToListId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ToListId");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("mini_cloud.Databases.Entities.ToList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("IconColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ToLists");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fe4ebf2e-f1e9-48c8-9a52-d297e865c4a1"),
                            IconColor = "#97989b",
                            Title = "重要"
                        },
                        new
                        {
                            Id = new Guid("8897880e-3ffe-4842-9c22-ff3a212448bc"),
                            IconColor = "#17289b",
                            Title = "我的列表1"
                        });
                });

            modelBuilder.Entity("mini_cloud.Databases.Entities.Todo", b =>
                {
                    b.HasOne("mini_cloud.Databases.Entities.ToList", "ToList")
                        .WithMany("Todos")
                        .HasForeignKey("ToListId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ToList");
                });

            modelBuilder.Entity("mini_cloud.Databases.Entities.ToList", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
